import "core-js/stable";
import "regenerator-runtime/runtime";
import { waitForAppScreen, zemu, genericTx, nano_models,SPECULOS_ADDRESS, txFromEtherscan} from './test.fixture';
import { ethers } from "ethers";
import { parseEther, parseUnits} from "ethers/lib/utils";

// dex unxswapByOrderId
// nano_models.forEach(function(model) {
//     jest.setTimeout(20000)
//     test('[Nano ' + model.letter + '] Dex unx swap by order id', zemu(model, async (sim, eth) => {
    
//     // https://www.oklink.com/cn/eth/tx/0x9d64be847bdd3e2eee3e6fd8c234c5e6bd91d37ed46ccfc800109f10c9c024aa
//     const serializedTx = txFromEtherscan("0x02f90133018201d8844229418085054c8ac7c08304a200943b3ae790df4f312e745d270119c6052904fb679080b8c49871efa4000000000000000000000000215275db425bafaad80d97aeca7967a76636bfa4000000000000000000000000000000000000000000000017edeb73d476022b9c00000000000000000000000000000000000000000000000001cb278902f863bb0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000140000000000000003b6d03403cc1df56c0a997755bcef01e8f1b62699ba7bee8c001a09d46fe7ff9e6dfa324e93cd1c8a3be5727ccf37034949097cdbf19e53b4b5218a03920c14da544e398afb2f7a5114309b25f42a118d7a022c907b50a595a464e0c")
  
//     const tx = eth.signTransaction(
//       "44'/60'/0'/0",
//       serializedTx,
//     );
  
//     const right_clicks = model.letter === 'S' ? 12 : 6;
  
//     // Wait for the application to actually load and parse the transaction
//     await waitForAppScreen(sim);
  
//     await new Promise(r => setTimeout(r, 200000));
  
//     // Navigate the display by pressing the right button `right_clicks` times, then pressing both buttons to accept the transaction.
//   //   await sim.navigateAndCompareSnapshots('.', model.name + '_swap_exact_eth_for_tokens_with_beneficiary', [right_clicks, 0]);
  
//   //   await tx;
//     }));
//   });

// dex uniswapV3SwapTo
// nano_models.forEach(function(model) {
//     jest.setTimeout(20000)
//     test('[Nano ' + model.letter + '] Dex uni swapv3 swap to', zemu(model, async (sim, eth) => {
    
//     // https://www.oklink.com/cn/eth/tx/0x6c2452daea3141f8794c944ebcdd383db4be40e8fd597ee6c2de697e8243f5b0
//     const serializedTx = txFromEtherscan("0x02f9013a0182071e8405f5e10085056b94fdbe83038abd943b3ae790df4f312e745d270119c6052904fb67908711c37937e08000b8c40d5f0e3b0000000000299c8640ba0801d6899d7f1ee40a1d75db569c01aea94b831e6e8a0000000000000000000000000000000000000000000000000011c37937e080000000000000000000000000000000000000000000000000000b94e51b0bb9c821000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000018000000000000000000000007afbf040929b06383804c40d5ed9188754943427c080a05f83768340db072d1e961f0954d053659d88496af201af0be4aa69624d7a8cc0a02ad1c17bf0bce33fb7d7dd22fcedd0ca3db5ec8995d29744a6d87feef91014b7")
  
//     const tx = eth.signTransaction(
//       "44'/60'/0'/0",
//       serializedTx,
//     );
  
//     const right_clicks = model.letter === 'S' ? 12 : 6;
  
//     // Wait for the application to actually load and parse the transaction
//     await waitForAppScreen(sim);
  
//     await new Promise(r => setTimeout(r, 200000));
  
//     // Navigate the display by pressing the right button `right_clicks` times, then pressing both buttons to accept the transaction.
//   //   await sim.navigateAndCompareSnapshots('.', model.name + '_swap_exact_eth_for_tokens_with_beneficiary', [right_clicks, 0]);
  
//   //   await tx;
//     }));
//   });

// Dex pmmv2 swap
// nano_models.forEach(function(model) {
//     jest.setTimeout(20000)
//     test('[Nano ' + model.letter + '] Dex pmmv2 swap', zemu(model, async (sim, eth) => {
    
//     // https://www.oklink.com/cn/eth/tx/0x03bd4a6a517a1063251fd455bc09dc954a6d01ccb041a5fb7b64e8412f55a75c
//     const serializedTx = txFromEtherscan("0x02f90392010c842160ec00850306dc4200830504b2943b3ae790df4f312e745d270119c6052904fb679080b9032412a0ddc700000000000000000000000000000000000000000000000000299c00bae91001000000000000000000000000000000000000000000000000000000000bebc200000000000000000000000000000000000000000000000000019dd7bc810654000000000000000000000000000000000000000000000000000000000064f0013b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000023fa682f5bb001000000000000000000000000ba47381da1fe3d4a41fa09703284a0e8dc983723000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000000000000000000000000000000000003f523b5600000000000000000000000000000000000000000000000008ac7230489e800000000000000000000000000000000000000000000000000000000000064eff31c0000000000000000000000000000000000000000000000000000000064eff3d00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000003b3ae790df4f312e745d270119c6052904fb679000000000000000000000000000000000000000000000000000009920699c46a8343a33270bfc2b62aec17a65972a7b6104205e01f0b675c991eb4817daac65cc8b67f500e25d7c7d12beddd0efc6493a40dfde359b44603c4ccc8476be327efd51e3289574edaccb83c7f69752a015a6f3e1014beb0770d36a0aa78eace5777127f13bed64863034b3d01738138fe58092608097f3306336b97ce8fcdc332c060000000000000000000000000000000000000000000000000000000000000000c080a039f04512dc21ec6b8fff7c2d41d2013ef1ffb60941e94e5f913d4badf3843d2ca006e8ba6297306406d3ae853bceeb9e8ff46ffa9c7e9c31a09e7a3760d2137653")
  
//     const tx = eth.signTransaction(
//       "44'/60'/0'/0",
//       serializedTx,
//     );
  
//     const right_clicks = model.letter === 'S' ? 12 : 6;
  
//     // Wait for the application to actually load and parse the transaction
//     await waitForAppScreen(sim);
  
//     await new Promise(r => setTimeout(r, 200000));
  
//     // Navigate the display by pressing the right button `right_clicks` times, then pressing both buttons to accept the transaction.
//   //   await sim.navigateAndCompareSnapshots('.', model.name + '_swap_exact_eth_for_tokens_with_beneficiary', [right_clicks, 0]);
  
//   //   await tx;
//     }));
// });

  // smartSwapByOrderId
// nano_models.forEach(function(model) {
//     jest.setTimeout(20000)
//     test('[Nano ' + model.letter + '] Dex smart swap by order id', zemu(model, async (sim, eth) => {
    
//     // https://www.oklink.com/cn/eth/tx/0xcb2777587f822a3d44b0c3880ede1d6785b73ddc06e9ef711b131d758b11a56f
//     const serializedTx = txFromEtherscan("0x02f9045a015d8420c855808504190ab00083044d72943b3ae790df4f312e745d270119c6052904fb67908801aa535d3d0c0000b903e4b80c2f090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000723696965f47b990dff00064fcaca95f0ee0112300000000000000000000000000000000000000000000000001aa535d3d0c0000000000000000000000000000000000000000000000001f257e5f209577bbe9d00000000000000000000000000000000000000000000000000000000064f01bef0000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000003c0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000001aa535d3d0c0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000000000000000001000000000000000000000000031f1ad10547b8deb43a36e5491c06a93812023a00000000000000000000000000000000000000000000000000000000000000010000000000000000000000004cb36349b81ed72c0d93a97271b46ef6d4604bad00000000000000000000000000000000000000000000000000000000000000018000000000000000000027104cb36349b81ed72c0d93a97271b46ef6d4604bad000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000000c080a0085e28ec3e5cdced762e50326defe3a8b5e94e67fd65bb60ac3d38e429d91df7a00e181efb3f28f85857d709f0d0880fd344860809972281d2042f7d6718a0b1f8")
  
//     const tx = eth.signTransaction(
//       "44'/60'/0'/0",
//       serializedTx,
//     );
  
//     const right_clicks = model.letter === 'S' ? 12 : 6;
  
//     // Wait for the application to actually load and parse the transaction
//     await waitForAppScreen(sim);
  
//     await new Promise(r => setTimeout(r, 200000));
  
//     // Navigate the display by pressing the right button `right_clicks` times, then pressing both buttons to accept the transaction.
//   //   await sim.navigateAndCompareSnapshots('.', model.name + '_swap_exact_eth_for_tokens_with_beneficiary', [right_clicks, 0]);
  
//   //   await tx;
//     }));
//   });


// bridgeToV2
// nano_models.forEach(function(model) {
//     jest.setTimeout(20000)
//     test('[Nano ' + model.letter + '] Dex bridge to v2', zemu(model, async (sim, eth) => {
    
//     // https://www.oklink.com/cn/eth/tx/0x5de4c03c74c7e2fdce6955051d01282abdda17de6cb68c8c33f11efffe59e0eb
//     const serializedTx = txFromEtherscan("0x02f902320103842625a00085036bf32a00830508fb94fc99f58a8974a4bc36e60e2d490bb8d72899ee9f80b901c4972250fe0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000d000000000000000000000000fc99f58a8974a4bc36e60e2d490bb8d72899ee9f000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000000000000000000000000000000000000000003800000000000000000000000000000000000000000000000000000002505bcc8100000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002a30783639373933376530626132356661396439336261663433373866346531396531383563376666666500000000000000000000000000000000000000000000c001a05eb4b8220472cb4d2fd7a6e4a18945a7eea73624327486dd810ae3e1b9d0f678a059511957c2c6066d765b6d5badcf8e2508c9db4474d9114cdb8e7c8f4f0739ee")
  
//     const tx = eth.signTransaction(
//       "44'/60'/0'/0",
//       serializedTx,
//     );
  
//     const right_clicks = model.letter === 'S' ? 12 : 6;
  
//     // Wait for the application to actually load and parse the transaction
//     await waitForAppScreen(sim);
  
//     await new Promise(r => setTimeout(r, 200000));
  
//     // Navigate the display by pressing the right button `right_clicks` times, then pressing both buttons to accept the transaction.
//   //   await sim.navigateAndCompareSnapshots('.', model.name + '_swap_exact_eth_for_tokens_with_beneficiary', [right_clicks, 0]);
  
//   //   await tx;
//     }));
//   });

// swapBridgeToV2
nano_models.forEach(function(model) {
    jest.setTimeout(20000)
    test('[Nano ' + model.letter + '] Dex swap bridge to v2', zemu(model, async (sim, eth) => {
    
    // https://www.oklink.com/cn/eth/tx/0x81f8a84a5dea535bfb7ec07fe2f3de931de0e250815272fedac5e89b77a9dbc0
    const serializedTx = txFromEtherscan("0x02f90892010d8405f5e100850469cc51a6830b2adf94fc99f58a8974a4bc36e60e2d490bb8d72899ee9f80b908243d21e25a0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000ec7b4d34ba7453513c0002161107075a005e478f00000000000000000000000000000000000000000000000000000000000000030029c204c28308010000000000000000000000000000000000000000000000c30000000000000000000000000000000000000000000000000000000cb964d2800000000000000000000000000000000000000000000000000000000caaefe45c0000000000000000000000000000000000000000000000000000000caaefe45c000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000002a00000000000000000000000000000000000000000000000000000000000000760000000000000000000000000000000000000000000000000000000000000012000000000000000000000000092e929d8b2c8430bcaf4cd87654789578bb2b786000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000cb1404824000000000000000000000000000000000000000000000000000000000000000a555344542854524f4e29000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022545858634255584c6f724a6378656745576a56573246454a536732575269587646480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000484d1b260d40000000000000000000000000000000000000000000000000029c204c2830801000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000000000000000000000000cb964d2800000000000000000000000000000000000000000000000000000000caaefe45c0000000000000000000000000000000000000000000000000000000064f9bc9f00000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000046000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000cb964d280000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000000000000000000000000000000000000000000001000000000000000000000000cbd78f8fb96bae40826a601f8b9ba17782d625270000000000000000000000000000000000000000000000000000000000000001000000000000000000000000cbd78f8fb96bae40826a601f8b9ba17782d62527000000000000000000000000000000000000000000000000000000000000000100000000000000000000271004c8577958ccc170eb3d2cca76f9d51bc6e42d8f0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000022545858634255584c6f724a6378656745576a56573246454a53673257526958764648000000000000000000000000000000000000000000000000000000000000c001a03fe1c8def4b6eae484fdefef494e7dc11e35d809ab63e2463b62ff8995cc22dea069d748cf03ceb360d8c83f91ebbc991ff94294bb668dcdd3d2228e20ab6713ef")
  
    const tx = eth.signTransaction(
      "44'/60'/0'/0",
      serializedTx,
    );
  
    const right_clicks = model.letter === 'S' ? 12 : 6;
  
    // Wait for the application to actually load and parse the transaction
    await waitForAppScreen(sim);
  
    await new Promise(r => setTimeout(r, 200000));
  
    // Navigate the display by pressing the right button `right_clicks` times, then pressing both buttons to accept the transaction.
  //   await sim.navigateAndCompareSnapshots('.', model.name + '_swap_exact_eth_for_tokens_with_beneficiary', [right_clicks, 0]);
  
  //   await tx;
    }));
  });